machine:
  pre:
    - sudo curl -L -o /usr/bin/docker 'https://s3-external-1.amazonaws.com/circle-downloads/docker-1.9.1-circleci'
    - sudo chmod 0755 /usr/bin/docker
  environment:
    SCRATCH: "$HOME/scratch"
    DOCKER_IMAGE: "poldracklab/mriqc"
    DOCKER_TAG: "latest"
    TEST_DATA_NAME: "circle-tests"
    TEST_DATA_URL: "https://files.osf.io/v1/resources/fvuh8/providers/osfstorage/590ce4a96c613b025147c568"
    MRIQC_API_TAG: 1.0.2
  services:
    - docker

dependencies:
  cache_directories:
    - "~/docker"
    - "~/data"

  pre:
    # Download test data
    - mkdir -p ~/data/ ~/docker
    # Create scratch folder and force group permissions
    - mkdir -p $SCRATCH && sudo setfacl -d -m group:ubuntu:rwx $SCRATCH && sudo setfacl -m group:ubuntu:rwx $SCRATCH
    - if [[ ! -d ~/data/${TEST_DATA_NAME} ]]; then wget --retry-connrefused --waitretry=5 --read-timeout=20 --timeout=15 -t 0 -q -O ${TEST_DATA_NAME}.tar.gz "${TEST_DATA_URL}" && tar xzf ${TEST_DATA_NAME}.tar.gz -C ~/data/; fi
    - docker load --input $HOME/docker/cache.tar || true
    # Prepare MRIQCWebAPI
    - pip install docker-compose
    - rm -rf $HOME/mriqcwebapi
    - cd $HOME && git clone https://github.com/poldracklab/mriqcwebapi.git && cd $HOME/mriqcwebapi && git checkout ${MRIQC_API_TAG}
    - if [ "${MRIQC_API_SECRET_TOKEN}" != "" ]; then sed -i -E "s/<secret_token>/$MRIQC_API_SECRET_TOKEN/" $HOME/mriqcwebapi/dockereve-master/.env && grep -q -i $MRIQC_API_SECRET_TOKEN $HOME/mriqcwebapi/dockereve-master/.env; fi
    - docker-compose -f $HOME/mriqcwebapi/dockereve-master/docker-compose.yml pull
    - docker-compose -f $HOME/mriqcwebapi/dockereve-master/docker-compose.yml build
    - nohup bash -c "docker-compose -f $HOME/mriqcwebapi/dockereve-master/docker-compose.yml --verbose up -d" && sleep 10
  override:
    - if [ "${MRIQC_API_SECRET_TOKEN}" != "" ]; then sed -i -E "s/<secret_token>/$MRIQC_API_SECRET_TOKEN/" mriqc/interfaces/webapi.py && grep -q -i $MRIQC_API_SECRET_TOKEN mriqc/interfaces/webapi.py; fi
    - ? |
        e=1 && for i in {1..5}; do
            docker build --rm=false -t ${DOCKER_IMAGE}:${DOCKER_TAG} --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` --build-arg VCS_REF=`git rev-parse --short HEAD` --build-arg VERSION="${CIRCLE_TAG:-$CIRCLE_SHA1}" . && e=0 && break || sleep 15
        done && [ "$e" -eq "0" ]
      :
        timeout: 3200
    - docker save -o $HOME/docker/cache.tar ubuntu:xenial-20161213 ${DOCKER_IMAGE}:${DOCKER_TAG} python:3.4-onbuild tutum/nginx:latest mongo:latest :
        timeout: 3200
test:
  override:
    - bash .circleci/participant.sh :
        parallel: true
        timeout: 3200
        environment:
          GIT_COMMIT_MSG: $( git log --format=oneline -n 1 $CIRCLE_SHA1 )
          MRIQC_API_HOST: $( hostname -I | awk '{print $1}' )
    - bash .circleci/group.sh :
        parallel: true
        environment:
          GIT_COMMIT_MSG: $( git log --format=oneline -n 1 $CIRCLE_SHA1 )
    - bash .circleci/check_outputs.sh :
        parallel: true
        timeout: 3200
        environment:
          GIT_COMMIT_MSG: $( git log --format=oneline -n 1 $CIRCLE_SHA1 )
    - bash .circleci/check_iqms.sh :
        parallel: true
        environment:
          GIT_COMMIT_MSG: $( git log --format=oneline -n 1 $CIRCLE_SHA1 )
    - bash .circleci/webapi.sh :
        parallel: true
        environment:
          GIT_COMMIT_MSG: $( git log --format=oneline -n 1 $CIRCLE_SHA1 )
          MRIQC_API_HOST: $( hostname -I | awk '{print $1}' )

general:
  artifacts:
    - "~/scratch"
  branches:
    ignore:
      - gh-pages # ignore gh-pages
      - doc/* # ignore all doc-related branches

deployment:
  production:
    tag: /.*/
    commands:
      - ? |
          if [[ -n "$DOCKER_PASS" ]]; then
              VERSION_EXTRA=$(echo ${CIRCLE_TAG} | cut -d '-' -f 2)
              docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
              docker tag ${DOCKER_IMAGE} ${DOCKER_IMAGE}:$CIRCLE_TAG
              docker push ${DOCKER_IMAGE}:$CIRCLE_TAG

              if [ "${VERSION_EXTRA:0:2}" != "rc" ]; then
                  echo "This is not a release candidate, pushing ${DOCKER_IMAGE}:${DOCKER_TAG}"
                  docker push ${DOCKER_IMAGE}:${DOCKER_TAG}
              fi
          fi
        :
          timeout: 21600
      - |
        if [[ "$PYPI_PASS" != "" ]]; then
            printf "[distutils]\nindex-servers =\n    pypi\n\n[pypi]\nusername:$PYPI_USER\npassword:$PYPI_PASS\n" > ~/.pypirc
            python setup.py sdist upload -r pypi
        fi
